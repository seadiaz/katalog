apiVersion: v1
kind: Namespace
metadata:
  name: katalog
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    name: katalog
  name: katalog
  namespace: katalog
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    name: katalog
  name: katalog
rules:
- apiGroups: ['*']
  resources: ['*']
  verbs: ['*']
- nonResourceURLs: ['*']
  verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    name: katalog
  name: katalog
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: katalog
subjects:
- kind: ServiceAccount
  name: katalog
  namespace: katalog
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: katalog-collector
  namespace: katalog
  labels:
    app: katalog-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: katalog-collector
  template:
    metadata:
      labels:
        app: katalog-collector
    spec:
      serviceAccount: katalog
      containers:
      - name: katalog-collector
        image: katalog
        env:
        - name: PUBLISHER
          value: "kafka"
        - name: KAFKA_URL
          value: "kafka.kafka:9092"
        - name: LOG_LEVEL
          value: "DEBUG"
        resources:
            limits:
              memory: 200Mi
              cpu: "100m"
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        livenessProbe:
            failureThreshold: 3
            exec:
              command:
                - /bin/stat
                - /tmp/imalive
            initialDelaySeconds: 5
            periodSeconds: 30
            
      volumes:
      - name: tmp
        emptyDir: {}